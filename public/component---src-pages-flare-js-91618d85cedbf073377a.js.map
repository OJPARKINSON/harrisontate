{"version":3,"sources":["webpack:///./src/components/cardVid.js","webpack:///./src/pages/flare.js","webpack:///./src/components/layout.js"],"names":["CardImg","props","className","alt","alternative","src","vid","controls","loop","playsInline","preload","playing","autoPlay","muted","target","rel","href","credits","igtag","query","SecondPage","data","title","styling","LinkedOne","LinkedTwo","firstLink","secondLink","thirdLink","allContentfulGif","edges","map","edge","key","node","id","tag","img","file","url","allContentfulVideo","ResponsivePlayer","playsinline","video","style","color","Date","getFullYear","Layout","children","render","site","siteMetadata","meta","name","content"],"mappings":"2LAUeA,G,UAPC,SAAAC,GAAK,OACjB,yBAAKC,UAAU,QACX,2BAAOA,UAAU,WAAWC,IAAKF,EAAMG,YAAcC,IAAKJ,EAAMK,IAAKC,UAAU,EAAOC,MAAI,EAACC,aAAW,EAACC,QAAQ,OAAOC,QAAQ,OAAOC,UAAQ,EAACC,OAAK,IACnJ,uBAAGC,OAAO,SAASC,IAAI,sBAAsBb,UAAU,QAAQc,KAAMf,EAAMgB,SAAS,2BAAIhB,EAAMiB,W,oCC+BzFC,GADEC,UA3BI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACjB,kBAAC,IAAD,KACE,yBAAKnB,UAAU,yBACb,kBAAC,IAAD,CAAKoB,MAAM,UACX,kBAAC,IAAD,CAAQC,QAAQ,cAAcD,MAAM,QAAQE,UAAU,SAASC,UAAU,gBAAgBC,UAAU,SAASC,WAAW,UAAUC,UAAU,KAC3I,yBAAK1B,UAAU,gBACb,yBAAKA,UAAU,YAAYC,IAAI,MAEhCkB,EAAKQ,iBAAiBC,MAAMC,KAAI,SAAAC,GAAI,OACnC,kBAAC,EAAD,CAASC,IAAKD,EAAKE,KAAKC,GAAIlB,QAAS,6BAA+Be,EAAKE,KAAKE,IAAKlB,MAAO,IAAMc,EAAKE,KAAKE,IAAK9B,IAAK,SAAW0B,EAAKE,KAAKG,IAAIC,KAAKC,SAEpJ,yBAAKrC,UAAU,aAAaiC,GAAG,eAC5Bd,EAAKmB,mBAAmBV,MAAMC,KAAI,SAAAC,GAAI,OACpC,kBAACS,EAAA,EAAD,CAAkBC,aAAW,EAACT,IAAKD,EAAKE,KAAKZ,MAAOiB,IAAK,SAAWP,EAAKE,KAAKS,MAAML,KAAKC,UAGhG,4BAAQK,MAAO,CAACC,MAAO,UACvB,kCACK,IAAIC,MAAOC,cADhB,iBAGE,uBAAG/B,KAAK,gCAAR,yBAQY,e,wGCTHgC,IAvBA,SAAC,GAAD,EAAG/C,MAAH,IAAUgD,EAAV,EAAUA,SAAV,OACb,kBAAC,IAAD,CACE9B,MAAK,YASL+B,OAAQ,SAAA7B,GAAI,OACR,6BACE,kBAAC,IAAD,CAAQC,MAAOD,EAAK8B,KAAKC,aAAa9B,MAAO+B,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAAS,UAAW,CAAED,KAAM,WAAYC,QAAS,wBAC3HN,IAbT,W","file":"component---src-pages-flare-js-91618d85cedbf073377a.js","sourcesContent":["import React from 'react'\nimport '../components/layout.css'\n\nconst CardImg = props => (\n    <div className=\"Card\">\n        <video className=\"leftCard\" alt={props.alternative}  src={props.vid} controls={false} loop playsInline preload=\"auto\" playing=\"true\" autoPlay muted></video>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"igtag\" href={props.credits}><p>{props.igtag}</p></a>\n    </div>\n)\n\nexport default CardImg \n","import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport CardVid from '../components/cardVid'\nimport Header from '../components/header'\nimport \"../components/Header.css\"\nimport ResponsivePlayer from '../components/ResponsivePlayer'\nimport { graphql } from 'gatsby'\n//src=\"../images/FlareLogoCompressed-min.png\"\nconst SecondPage = ({data}) => (\n  <Layout>\n    <div className=\"container flareLayout\">\n      <SEO title=\"Flare\" />\n      <Header styling=\"HeaderGroup\" title=\"Flare\" LinkedOne=\"Photos\" LinkedTwo=\"Harrison Tate\" firstLink=\"/flare\" secondLink=\"/Photos\" thirdLink=\"\" />\n      <div className=\"imgContainer\">\n        <img className=\"FlareLogo\" alt=\"\"  />\n      </div>\n      {data.allContentfulGif.edges.map(edge => (\n        <CardVid key={edge.node.id} credits={\"https://www.instagram.com/\" + edge.node.tag} igtag={\"@\" + edge.node.tag} vid={\"https:\" + edge.node.img.file.url} />\n      ))}\n      <div className=\"heroTitles\" id=\"harrisonVid\">\n        {data.allContentfulVideo.edges.map(edge => (\n           <ResponsivePlayer playsinline key={edge.node.title} url={\"https:\" + edge.node.video.file.url} />\n          ))}\n      </div>\n    <footer style={{color: 'white'}}>\n    <h3>\n      Â© {new Date().getFullYear()}, Built by\n      {` `}\n      <a href=\"http://oliverparkinson.co.uk\">Oliver Parkinson</a>\n    </h3>\n    </footer>\n    </div>\n  </Layout>\n)\n\nexport default SecondPage\nexport const query = graphql`\nquery video {\nallContentfulVideo {\n  edges {\n      node {\n      id\n      title\n      video {\n          file {\n          url\n          }\n      }\n      }\n  }\n  }\n  allContentfulGif(sort: { fields: [createdAt], order: ASC }) {\n    edges {\n        node {\n        id\n        tag\n        img {\n          file {\n            url\n          }\n        }\n        }\n    }\n    }\n}\n`","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nconst Layout = ({ props, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n        <div>\n          <Helmet title={data.site.siteMetadata.title} meta={[{ name: 'description', content: 'sample'}, { name: 'keywords', content: 'sample, something'}]}/>\n          {children}\n        </div>\n    )}/>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}