{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/pages/Photos.js"],"names":["Layout","props","children","query","render","data","title","site","siteMetadata","meta","name","content","Header","HandeleScroll","event","window","pageYOffset","setState","hasScrolled","state","componentDidMount","addEventListener","this","className","styling","to","firstLink","secondLink","LinkedOne","thirdLink","LinkedTwo","React","Component","defaultProps","siteTitle","SecondPage","id","allContentfulImages","edges","map","edge","src","node","image","file","url","key","alt","alternative","Date","getFullYear","href"],"mappings":"0LA4BeA,IAvBA,SAAC,GAAD,EAAGC,MAAH,IAAUC,EAAV,EAAUA,SAAV,OACb,kBAAC,IAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACR,6BACE,kBAAC,IAAD,CAAQC,MAAOD,EAAKE,KAAKC,aAAaF,MAAOG,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAAS,UAAW,CAAED,KAAM,WAAYC,QAAS,wBAC3HT,IAbT,W,yGCAIU,E,qHACJ,WAAYX,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAUFY,cAAgB,SAACC,GACGC,OAAOC,YAET,GACd,EAAKC,SAAS,CAACC,aAAa,IAE5B,EAAKD,SAAS,CAACC,aAAa,KAd9B,EAAKC,MAAQ,CACXD,aAAa,GAJE,E,2BAQnBE,kBAAA,WACEL,OAAOM,iBAAiB,SAAUC,KAAKT,gB,EAWvCT,OAAA,WACA,OAEI,yBAAKmB,UAAWD,KAAKH,MAAMD,YAAc,wBAA0B,UACjE,yBAAKK,UAAWD,KAAKrB,MAAMuB,SAC3B,kBAAC,IAAD,CAAMC,GAAIH,KAAKrB,MAAMyB,WAAW,4BAAKJ,KAAKrB,MAAMK,QAChD,kBAAC,IAAD,CAAMiB,UAAU,SAASE,GAAIH,KAAKrB,MAAM0B,YAAaL,KAAKrB,MAAM2B,WAChE,kBAAC,IAAD,CAAML,UAAU,WAAWE,GAAIH,KAAKrB,MAAM4B,WAAYP,KAAKrB,MAAM6B,c,GA5BtDC,IAAMC,WAuC3BpB,EAAOqB,aAAe,CACpBC,UAAU,IAGGtB,O,yICjDf,gIA+BeuB,UAvBI,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KAClB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,WACX,kBAAC,IAAD,CAAQkB,QAAQ,cAAclB,MAAM,SAASsB,UAAU,gBAAgBE,UAAU,QAAQJ,UAAU,UAAUC,WAAW,GAAGE,UAAU,WACrI,yBAAKO,GAAG,gBAAgBb,UAAU,OAC9B,yBAAKA,UAAU,UACVlB,EAAKgC,oBAAoBC,MAAMC,KAAI,SAAAC,GAAI,OACpC,yBAAKC,IAAK,SAAWD,EAAKE,KAAKC,MAAMC,KAAKC,IAAMC,IAAK,IAAMN,EAAKE,KAAKpC,MAAO8B,GAAI,IAAMI,EAAKE,KAAKpC,MAAOyC,IAAKP,EAAKE,KAAKM,mBAIlI,gCACI,kCACG,IAAIC,MAAOC,cADd,iBAGA,uBAAGC,KAAK,gCAAR,wBAQT,IAAMhD,EAAK","file":"component---src-pages-photos-js-0f494c692967fc140bc0.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nconst Layout = ({ props, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n        <div>\n          <Helmet title={data.site.siteMetadata.title} meta={[{ name: 'description', content: 'sample'}, { name: 'keywords', content: 'sample, something'}]}/>\n          {children}\n        </div>\n    )}/>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link } from \"gatsby\"\n\n//https://css-tricks.com/snippets/css/complete-guide-grid/\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hasScrolled: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.HandeleScroll)\n  }\n  HandeleScroll = (event) => {\n    const scrollTop = window.pageYOffset\n\n    if (scrollTop > 50) {\n      this.setState({hasScrolled: true})\n    } else {\n      this.setState({hasScrolled: false})\n    }\n  } \n    render() {\n    return (\n\n        <div className={this.state.hasScrolled ? 'Header HeaderScrolled' : 'Header'}> \n          <div className={this.props.styling}>\n          <Link to={this.props.firstLink}><h1>{this.props.title}</h1></Link>\n          <Link className=\"Photos\" to={this.props.secondLink}>{this.props.LinkedOne}</Link>\n          <Link className=\"Lookbook\" to={this.props.thirdLink}>{this.props.LinkedTwo}</Link>\n        </div>\n    </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout';\nimport '../components/layout.css'\nimport \"../components/Header.css\"\nimport Header from '../components/header';\n\n\nconst SecondPage = ({ data }) => {\n    return (\n        <Layout>\n            <SEO title=\"Photos\"/>\n            <Header styling=\"HeaderGroup\" title=\"Photos\" LinkedOne=\"Harrison Tate\" LinkedTwo=\"Flare\" firstLink=\"/Photos\" secondLink=\"\" thirdLink=\"/flare\"/>\n            <div id=\"img-container\" className=\"row\">\n                <div className=\"column\">\n                    {data.allContentfulImages.edges.map(edge => (\n                        <img src={\"https:\" + edge.node.image.file.url } key={\"i\" + edge.node.title} id={\"i\" + edge.node.title} alt={edge.node.alternative} />\n                    ))}\n                </div>\n            </div>\n            <footer>\n                <h3>\n                Â© {new Date().getFullYear()}, Built by\n                {` `}\n                <a href=\"http://oliverparkinson.co.uk\">Oliver Parkinson</a>\n                </h3>\n            </footer>\n        </Layout>\n    )\n};\n\nexport default SecondPage\nexport const query = graphql`\nquery images {\n    allContentfulImages(limit: 24){\n        edges {\n            node {\n                title\n                alternative\n                image {\n                    file {\n                       url\n                    }\n                }\n            }\n        }\n    }\n}\n`\n"],"sourceRoot":""}