{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","NotFoundPage","a","createElement","title","m","module","exports","require","default","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","_this","_React$Component","call","this","HandeleScroll","event","window","pageYOffset","setState","hasScrolled","state","componentDidMount","addEventListener","react_default","className","gatsby_link_default","to","Component","siteTitle","Layout","gatsby_browser_entry","Helmet_default","header","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-c04e8e2b9c4d34cb8fbb.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport '../components/Header.css'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import Link from 'gatsby-link'\nimport PropTypes from 'prop-types'\nimport './Header.css'\nimport React from 'react'\n\n//https://css-tricks.com/snippets/css/complete-guide-grid/\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hasScrolled: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.HandeleScroll)\n  }\n  HandeleScroll = (event) => {\n    const scrollTop = window.pageYOffset\n\n    if (scrollTop > 50) {\n      this.setState({hasScrolled: true})\n    } else {\n      this.setState({hasScrolled: false})\n    }\n  } \n    render() {\n    return (\n      <div className={this.state.hasScrolled ? 'Header HeaderScrolled' : 'Header'}> \n        <div className=\"HeaderGroup\">\n          <Link to=\"/\"><h1 className=\"firstPage\">Harrsion Tate</h1></Link>\n          <Link className=\"Photos\" to=\"/Photos\">Photos</Link>\n          <Link className=\"Lookbook\" to=\"/Flare\">Lookbook</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Header from '../components/header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n        <div>\n          <Helmet \n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'sample'},\n            { name: 'keywords', content: 'sample, something'}\n          ]}\n          />\n          <Header />\n          {children}\n        </div>\n    )}/>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}